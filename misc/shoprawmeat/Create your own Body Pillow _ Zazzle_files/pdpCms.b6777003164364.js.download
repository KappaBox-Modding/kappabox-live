(window.__LOADABLE_LOADED_CHUNKS__=window.__LOADABLE_LOADED_CHUNKS__||[]).push([[269],{104:function(e,t,s){"use strict";s.d(t,"c",(function(){return o})),s.d(t,"a",(function(){return n})),s.d(t,"b",(function(){return r}));var i=s(1515);class o{static forError(e,t){return s=>{s.requestId===e&&t(s)}}static forErrorType(e,t){return s=>{s.type===e&&t(s)}}static forRoom(e,t){return(s,...i)=>{s.roomId===e&&t(...i)}}static forRequest(e,t){return(s,...i)=>{s.requestId===e&&t(...i)}}static forRoomRequest(e,t,s){return(i,...o)=>{i.roomId===e&&i.requestId===t&&s(...o)}}}class n{static create(e,t){let s=Object(i.a)().toUpperCase();return{requestId:e?e+"_"+s:s,roomId:t}}}class r{static addRole(e,t){const s=e&&e.roles;if(s){s.indexOf(t)<0&&s.push(t)}}static hasRole(e,t){const s=e&&e.roles;return!!s&&s.indexOf(t)>=0}static removeRole(e,t){const s=e&&e.roles;if(s){const e=s.indexOf(t);e>=0&&s.splice(e,1)}}}},1106:function(e,t,s){"use strict";s.d(t,"a",(function(){return i})),s.d(t,"c",(function(){return o})),s.d(t,"b",(function(){return n})),s.d(t,"d",(function(){return r})),s.d(t,"e",(function(){return a})),s.d(t,"g",(function(){return c})),s.d(t,"f",(function(){return d}));const i="BulkOrdering/AddRow",o="BulkOrdering/RemoveRow",n="BulkOrdering/Clear",r="page";function a(e,t){return{type:i,product:e,_stateKey:t}}function c(e){return{type:o,_stateKey:e}}function d(){return{type:n}}},1140:function(e,t,s){"use strict";s.d(t,"a",(function(){return d}));var i=s(3),o=s(1274),n=s(104),r=s(55),a=s(13),c=s(203);class d{constructor(e){Object(i.a)(this,"baseConfig",void 0),Object(i.a)(this,"connected",!1),Object(i.a)(this,"connectedOnce",!1),Object(i.a)(this,"csrf",void 0),Object(i.a)(this,"myself",void 0),Object(i.a)(this,"socket",void 0),Object(i.a)(this,"userHandlers",new Map),this.baseConfig=e,void 0===e.requestTimeoutMs&&(e.requestTimeoutMs=5e3),void 0===e.roomRejoinIntervalMs&&(e.roomRejoinIntervalMs=1e4),e.authData&&e.authData.csrfToken&&(this.csrf={csrf:e.authData.csrfToken})}isConnected(){return this.socket&&this.socket.connected&&this.connected}async joinRoom(e){return new Promise((t,s)=>{let i=0;this.baseConfig.requestTimeoutMs>0&&(i=setTimeout(()=>{this.offJoinSuccess(r),this.offError(a),this.logTimeout("joinRoom",this.baseConfig.requestTimeoutMs),s("timeout")},this.baseConfig.requestTimeoutMs));const o=n.a.create("joinRoom",e.id),r=n.c.forRoomRequest(e.id,o.requestId,e=>{this.offJoinSuccess(r),this.offError(a),clearTimeout(i),t(e)}),a=n.c.forError(o.requestId,e=>{this.offJoinSuccess(r),this.offError(a),clearTimeout(i),s(e)});this.onJoinSuccess(r),this.onError(a),this.emitJoinRoom(o)})}async joinRooms(e){await Promise.all(e.map(e=>this.joinRoom(e)))}async listJoinedRooms(){return new Promise((e,t)=>{const s=n.a.create("listRooms"),i=n.c.forRequest(s.requestId,t=>{this.offListRooms(i),this.offError(o),e(t)}),o=n.c.forError(s.requestId,e=>{this.offListRooms(i),this.offError(o),t(e)});this.onListRooms(i),this.onError(o),this.emitListRooms(s)})}async shutdown(){this.socket.disconnect(),this.fireSyntheticEvent(r.m.SHUTDOWN)}async updateAuthData(e){let t=!1;if(this.baseConfig.authData||(this.baseConfig.authData={}),e.accessToken&&e.clientId&&(this.baseConfig.authData.accessToken=e.accessToken,this.baseConfig.authData.clientId=e.clientId,t=!0),e.csrfToken&&(this.csrf={csrf:e.csrfToken}),this.socket&&t)return new Promise((e,t)=>{const s=n.a.create("credsRefresh"),i=n.c.forRequest(s.requestId,()=>{this.offCredentialsRefresh(i),this.offError(o),e()}),o=n.c.forError(s.requestId,e=>{this.offCredentialsRefresh(i),this.offError(o),t(e)});this.onCredentialsRefresh(i),this.onError(o),this.emitCredentialsRefresh(s,this.baseConfig.authData)})}addUserHandler(e,t){this.userHandlers.has(e)||this.userHandlers.set(e,[]),this.userHandlers.get(e).push(t)}async callApi(e,t,s){const{apiUrl:i,authData:o}=this.baseConfig,n=Object(a.c)(`${i}${t}`,{client_id:o&&o.clientId,access_token:o&&o.accessToken}),r={includeClientParam:!1};return("GET"===e?Object(c.d)(n,s,r,!1,this.csrf):Object(c.f)(n,s,r,this.csrf)).then(e=>e.success?Promise.resolve(e.data):Promise.reject(e.error))}async callWithRetry(e,t,s){for(let o=t;o>=0;o--)try{return await e()}catch(i){if(s&&this.logMessage(`Call failed after ${t-o+1} attempts: ${s}`),!o)throw i;await new Promise(e=>setTimeout(e,this.baseConfig.requestTimeoutMs))}}callUserHandlers(e,...t){const s=this.userHandlers.get(e);if(s)for(const i of s)i(...t)}async connect(){var e=this;if(!this.isConnected()&&this.baseConfig.socketUrl)return new Promise((t,s)=>{let{authData:i,socketUrl:n}=this.baseConfig;i&&i.clientId&&i.accessToken&&(n=Object(a.c)(n,{client_id:i.clientId,access_token:i.accessToken})),this.socket=o.io(n,{autoConnect:!1,withCredentials:!0});const c=async function s(){await e.handleConnect(),e.socket.off(r.i.CONNECT,s),e.socket.off(r.i.CONNECT_ERROR,d),t()},d=()=>{this.socket.off(r.i.CONNECT,c),this.socket.off(r.i.CONNECT_ERROR,d),s("Failed to (re)connect to "+n)};this.socket.on(r.i.CONNECT,c),this.socket.on(r.i.CONNECT_ERROR,d),this.socket.connect()})}fireSyntheticEvent(e,...t){e!==r.m.STATE_UPDATED&&this.callUserHandlers(r.m.STATE_UPDATED,...t),this.callUserHandlers(e,...t)}async handleConnect(){return this.connected=!0,await this.joinTempDisconnectedRooms(),this.connectedOnce?console.log("Re-connected to "+this.baseConfig.socketUrl):(this.connectedOnce=!0,console.log("Connected to "+this.baseConfig.socketUrl),this.emitInitialConnection(n.a.create("initialConnect"))),!0}handleDisconnect(){return this.connected=!1,!0}async init(e=0){var t=this;await this.callWithRetry(()=>this.connect(),e,"initial connect"),this.onEventInternal(r.i.CONNECT,(async function(){if(await t.handleConnect())return[]})),this.onEventInternal(r.i.DISCONNECT,(async function(){if(await t.handleDisconnect())return[]}))}async joinTempDisconnectedRooms(){if(this.socket&&!this.socket.connected&&this.socket.connect(),this.isConnected())try{const e=this.myself,t=await this.listJoinedRooms();this.setTempDisconnectedRooms(t);const s=this.getTempDisconnectedRooms();await this.joinRooms(s),e&&this.myself&&e!==this.myself&&this.shutdown()}catch(e){throw e.type===r.j.PERM_DENIED&&this.shutdown(),e}}logMessage(e){logToServer("Chat/Collab SDK: "+e)}logTimeout(e,t){this.logMessage(`${e} timed out after ${t}ms`)}setAutoRejoin(){var e=this;if(this.baseConfig.roomRejoinIntervalMs>0){(async function t(){try{e.joinTempDisconnectedRooms()}catch(s){}setTimeout(t,e.baseConfig.roomRejoinIntervalMs)})()}}onEventInternal(e,t){this.socket.on(e,(...s)=>{t(...s).then(t=>{t&&(this.fireSyntheticEvent(r.m.STATE_UPDATED,...t),this.callUserHandlers(e,...t))})})}onResponseBasic(e,t){this.socket.on(e,t)}offResponseBasic(e,t){this.socket.off(e,t)}emitCredentialsRefresh(e,t){this.socket.emit(r.k.CREDENTIAL_REFRESH,e,t)}emitInitialConnection(e){this.socket.emit(r.k.INITIAL_CONNECTION,e)}emitJoinRoom(e){this.socket.emit(r.k.JOIN_ROOM,e)}emitListRooms(e){this.socket.emit(r.k.LIST_ROOMS,e)}emitLoadUsersInRoom(e){this.socket.emit(r.k.LOAD_USERS_IN_ROOM,e)}onCredentialsRefresh(e){this.socket.on(r.l.CREDENTIAL_REFRESH,e)}offCredentialsRefresh(e){this.socket.off(r.l.CREDENTIAL_REFRESH,e)}onInitialConnection(e){this.socket.on(r.l.INITIAL_CONNECTION,e)}offInitialConnection(e){this.socket.off(r.l.INITIAL_CONNECTION,e)}onJoinSuccess(e){this.socket.on(r.l.JOIN_ROOM_SUCCESS,e)}offJoinSuccess(e){this.socket.off(r.l.JOIN_ROOM_SUCCESS,e)}onListRooms(e){this.socket.on(r.l.LIST_ROOMS,e)}offListRooms(e){this.socket.off(r.l.LIST_ROOMS,e)}onConnect(e){this.addUserHandler(r.i.CONNECT,e)}onConnectError(e){this.socket.on(r.i.CONNECT_ERROR,e)}onCredentialsWarning(e){this.socket.on(r.i.CREDENTIAL_WARNING,e)}onCredentialsDisconnect(e){this.socket.on(r.i.CREDENTIAL_DISCONNECT,e)}onDisconnect(e){this.addUserHandler(r.i.DISCONNECT,e)}onError(e){this.socket.on(r.i.ERROR,e)}offError(e){this.socket.off(r.i.ERROR,e)}onUserJoin(e){this.addUserHandler(r.i.USER_JOIN,e)}onUserLeave(e){this.addUserHandler(r.i.USER_LEAVE,e)}onLoadUsersInRoom(e){this.addUserHandler(r.i.LOAD_USERS_IN_ROOM,e)}onShutdown(e){this.addUserHandler(r.m.SHUTDOWN,e)}onStateUpdated(e){this.addUserHandler(r.m.STATE_UPDATED,e)}onUsersUpdated(e){this.addUserHandler(r.m.USERS_UPDATED,e)}}},1294:function(e,t,s){"use strict";s.d(t,"a",(function(){return R})),s.d(t,"b",(function(){return f}));var i=s(21),o=s(245),n=s(122),r=s.n(n),a=s(1106);function c(e=[],t){switch(t.type){case a.a:const s=t;return[...e,s._stateKey];case a.c:const i=t;return r()(e,e=>e!==i._stateKey);case a.b:return[];default:return e}}var d=s(66),l=s(1080),h=s(130),E=s(1079);const u=(e={})=>e,m=Object(i.a)(h.a,d.i,E.a,{addToIdeaBoard:o.a,zilMarkup:Object(i.c)(""),bulkOrdering:c,promos:u,tags:l.a});t.c=m;const R=Object(i.a)(h.a,d.i,E.a,{addToIdeaBoard:o.a,bulkOrdering:c,canAddCoverPhoto:Object(i.c)(null),canFreeSample:Object(i.c)(null),creatorStats:Object(i.c)(null),productInsightsEnabled:Object(i.c)(null),productStats:Object(i.c)(null),promos:u,tags:l.a,zilMarkup:Object(i.c)("")}),f=Object(i.a)(h.a,d.i,E.a,{addToIdeaBoard:o.a,zilMarkup:Object(i.c)(""),bulkOrdering:c,mainPaymentMethods:u,globalCollectPaymentTypes:u,pendingDesigns:Object(i.c)({entityIds:[],numResults:0,pageNum:1,pageSize:10}),promos:u,showHoursOfOperationDialog:u,tags:l.a})},1517:function(e,t,s){"use strict";s.d(t,"a",(function(){return m}));var i=s(2),o=s(3),n=s(196),r=s.n(n),a=s(139),c=s.n(a),d=s(1140),l=s(55),h=s(104);class E{constructor(e){Object(o.a)(this,"room",void 0),Object(o.a)(this,"hasPrev",!0),Object(o.a)(this,"messages",[]),Object(o.a)(this,"pendingMessages",[]),this.room=e}addMessages(e){E.mergeSortedMessages(this.messages,e)}addPending(e){this.pendingMessages.push(e)}deletePending(e){const t=this.pendingMessages.findIndex(t=>t.uid===e.uid);return t>=0&&(this.pendingMessages.splice(t,1),!0)}deletePendingByRequestId(e){const t=this.pendingMessages.findIndex(t=>t.requestId===e);return t>=0&&(this.pendingMessages.splice(t,1),!0)}async getMessages(e,t=0){for(;this.hasPrev&&(this.messages.length<e||t>0&&this.messages[e-1].messageIndex>t);)await this.loadOld(e);let s=this.messages.length-1;t>0&&(s=this.binarySearch(t),this.messages[s].messageIndex>t&&s--);const i=Math.max(s+1-e,0);return{hasNext:s+1<this.messages.length,hasPrev:this.hasPrev||i>0,items:this.messages.slice(i,s+1)}}async getMessagesRecent(e){const t=this.messages.length;let s=t;return e>0&&(s=this.binarySearch(e)),{hasNext:!1,hasPrev:this.hasPrev||s>0,items:this.messages.slice(s,t)}}getPendingMessages(){return this.pendingMessages}async loadRecent(e=0){let t=0;const s=this.messages.length;s>0&&(t=this.messages[Math.max(s-10,0)].messageIndex),e>0&&e<t&&(t=e);const i=await this.room.getMessagesAPI(t,0,t>0?0:20);i.hasPrev||(this.hasPrev=!1),E.mergeSortedMessages(this.messages,i.items)}static mergeSortedMessages(e,t){if(0==t.length)return;if(0==e.length)return void e.push(...t);let s=0,i=e.length;for(;i>0&&t[s].messageIndex<=e[i-1].messageIndex;)i--;for(;s<t.length;){for(;i<e.length&&e[i].messageIndex<t[s].messageIndex;)i++;if(i==e.length)return void e.push(...t.slice(s));t[s].messageIndex<e[i].messageIndex?e.splice(i++,0,t[s++]):t[s].messageIndex==e[i].messageIndex&&e.splice(i++,1,t[s++])}}async sendPending(e){if(this.room.isJoined()){const t=this.room.getClient();if(e){const s=this.pendingMessages.find(t=>t.uid===e.uid);s&&await t.sendMessagePending(this.room.getDescriptor(),s)}else await Promise.all(this.pendingMessages.map(e=>t.sendMessagePending(this.room.getDescriptor(),e)))}}binarySearch(e){let t=0,s=this.messages.length-1,i=0;for(;t+1<s;)i=Math.floor(.5*(t+s)),this.messages[i].messageIndex<e?t=i:s=i;return this.messages[t].messageIndex>=e?t:s}async loadOld(e){if(!this.hasPrev)return;let t=0;this.messages.length>0&&(t=this.messages[0].messageIndex-1);const s=await this.room.getMessagesAPI(0,t,e);s.hasPrev||(this.hasPrev=!1),E.mergeSortedMessages(s.items,this.messages),this.messages=s.items}}class u{constructor(e,t){Object(o.a)(this,"myself",void 0),Object(o.a)(this,"tempDisconnect",void 0),Object(o.a)(this,"client",void 0),Object(o.a)(this,"descriptor",void 0),Object(o.a)(this,"messageCache",void 0),Object(o.a)(this,"nextPendingMessageId",1),this.client=e,this.descriptor=t,this.messageCache=new E(this)}async addUser(e){await this.client.addToChat(this.descriptor,e)}deletePendingMessage(e){return this.messageCache.deletePending(e)}async forceSync(){this.descriptor&&await this.client.syncRooms([this.descriptor.id])}getAllUsers(){return this.descriptor&&this.descriptor.participants||[]}getClient(){return this.client}getDescriptor(){return this.descriptor}getId(){return this.descriptor.id}getLastMessageSeenList(){const e=new Map;for(const t of this.getAllUsers())e.has(t.lastSeenIndex)||e.set(t.lastSeenIndex,[]),e.get(t.lastSeenIndex).push(t);return e}getMyself(){return this.myself}getMyselfUser(){return this.getUser(this.getMyself())}async getMessages(e,t=0){return this.messageCache.getMessages(e,t)}async getMessagesAPI(e=0,t=0,s=0){return this.client.getMessagesAPI(this.descriptor,e,t,s)}async getMessagesRecent(e){return this.messageCache.getMessagesRecent(e)}getPendingMessages(){return this.messageCache.getPendingMessages()}async getPushNotificationSetting(){return this.client.getPushNotificationSetting(this.descriptor)}getUser(e){return e?this.getAllUsers().find(t=>t.participant.memberId===e):void 0}getUsersTyping(){return this.getAllUsers().filter(e=>e.typing)}async hideUnhide(e=!0){await this.client.hideUnhideRoom(this.descriptor,e)}isJoined(){return this.client.isConnected()&&!!this.myself&&!this.tempDisconnect}async join(){await this.client.joinRoom(this.descriptor)}static async joinRooms(e){if(e&&e.length>0){const t=e[0].client;e.every(e=>e.client===t)&&t.joinRooms(e.map(e=>e.descriptor))}}async leave(){this.myself&&(await this.removeUser(this.myself),this.myself=void 0)}markPendingMessageSent(e){return this.messageCache.deletePendingByRequestId(e.requestId)}static parseType(e){switch(e){case 5:return"chat";case 7:return"group_chat";case 9:return"collab_chat"}return""}async removeUser(e){await this.client.removeFromChat(this.descriptor,e)}async reportUser(e,t){await this.client.reportRoomUser(this.descriptor,e,t)}async resetPushNotificationSetting(){return this.client.resetPushNotificationSetting(this.descriptor)}async sendMessage(e){const t={failed:!1,message:e,pending:!1,requestId:"",uid:this.nextPendingMessageId++};return this.messageCache.addPending(t),this.client.sendMessagePending(this.descriptor,t)}async sendMessageAPI(e){return this.client.sendMessageAPI(this.descriptor,e)}async sendPendingMessage(e){return this.messageCache.sendPending(e)}async sendTyping(){return this.client.sendTyping(this.descriptor)}async sendSeenMessage(e){return this.client.sendSeenMessage(this.descriptor,e)}async setPushNotificationSetting(e){return this.client.setPushNotificationSetting(e,this.descriptor)}async setLastMessageSeen(){const e=await this.getMessages(1);if(1===e.items.length){const t=e.items[0],s=this.getMyselfUser();s&&s.lastSeenIndex<t.messageIndex&&this.client.sendSeenMessage(this.descriptor,t.messageIndex)}}async syncMessages(e){e?this.messageCache.addMessages(e):(await this.messageCache.loadRecent(),await this.messageCache.sendPending())}updateDescriptor(e){this.descriptor=e}onChatMessage(e){this.client.onChatMessage(h.c.forRoom(this.descriptor.id,e))}onChatMessageUpdate(e){this.client.onChatMessageUpdate(h.c.forRoom(this.descriptor.id,e))}onChatClosed(e){this.client.onChatClosed(h.c.forRoom(this.descriptor.id,e))}onHeadlineSet(e){this.client.onHeadlineSet(h.c.forRoom(this.descriptor.id,e))}onPermissionDisconnect(e){this.client.onPermissionDisconnect(h.c.forRoom(this.descriptor.id,e))}onSeenMessage(e){this.client.onSeenMessage(h.c.forRoom(this.descriptor.id,e))}onStateUpdated(e){this.client.onStateUpdated(h.c.forRoom(this.descriptor.id,e))}onTyping(e){this.client.onTyping(h.c.forRoom(this.descriptor.id,e))}onUserAdd(e){this.client.onUserAdd(h.c.forRoom(this.descriptor.id,e))}onUserJoin(e){this.client.onUserJoin(h.c.forRoom(this.descriptor.id,e))}onUserLeave(e){this.client.onUserLeave(h.c.forRoom(this.descriptor.id,e))}onUserRemove(e){this.client.onUserRemove(h.c.forRoom(this.descriptor.id,e))}onMessageStateChange(e){this.client.onMessageStateChange(h.c.forRoom(this.descriptor.id,e))}onNotTyping(e){this.client.onNotTyping(h.c.forRoom(this.descriptor.id,e))}}class m extends d.a{constructor(e){super({apiUrl:e.apiUrl,authData:e.authData,requestTimeoutMs:e.requestTimeoutMs,roomRejoinIntervalMs:e.roomRejoinIntervalMs,socketUrl:e.socketUrl+"chat_namespace"}),Object(o.a)(this,"config",void 0),Object(o.a)(this,"joinedRooms",new Set),Object(o.a)(this,"typingFunctions",new Map),Object(o.a)(this,"rooms",new Map),this.config=e}static async create(e,t=!1,s=0){const i=new m(e);return t||await i.init(s),i}async addToChat(e,t){const s=e.id,i=await this.getRoomById(s);if(!i||!i.isJoined())throw new Error("addToChat failed. Room not joined");return new Promise((e,i)=>{const o=h.a.create("addToChat",s),n=h.c.forRoomRequest(s,o.requestId,()=>{this.offRespAddToChat(n),this.offError(r),e()}),r=h.c.forError(o.requestId,e=>{this.offRespAddToChat(n),this.offError(r),i(e)});this.onRespAddToChat(n),this.onError(r),this.emitAddToChat(o,t)})}async blockUser(e){return new Promise((t,s)=>{const i=h.a.create("blockMember"),o=h.c.forRequest(i.requestId,()=>{this.offRespBlockMember(o),this.offError(n),t()}),n=h.c.forError(i.requestId,e=>{this.offRespBlockMember(o),this.offError(n),s(e)});this.onRespBlockMember(o),this.onError(n),this.emitBlockMember(i,e)})}async createRoom(e,t,s="",i=""){const o=await this.callApi("POST","Create",{recipientMemberIds:e,isGroupChat:t,subject:s,context:i});return this.getRoomById(o)}async getBlockedUsers(){return this.callApi("GET","GetBlockedList",{})}async getMessagesAPI(e,t=0,s=0,i=0){const o=await this.callApi("GET","GetMessages",{conversationId:e.id,startIndex:t,endIndex:s,count:i});return o.items.forEach(e=>{"string"==typeof e.sentDate&&(e.sentDate=new Date(e.sentDate))}),o}async getParticipantInfo(e){return this.callApi("GET","GetParticipantInfo",{memberId:e})}async getPushNotificationSetting(e){return this.callApi("GET","GetPushNotificationSetting",{conversationId:e.id})}getRoomByDescriptor(e){return this.rooms.has(e.id)||this.rooms.set(e.id,new u(this,e)),this.rooms.get(e.id)}async getRoomById(e){if(!this.rooms.has(e))if(this.joinedRooms.has(e))await this.joinRoom({id:e});else{const t=await this.getRoomDescriptorById(e);this.getRoomByDescriptor(t)}return this.rooms.get(e)}getRoomLoaded(e){if(this.rooms.has(e)&&this.joinedRooms.has(e)){const t=this.rooms.get(e);if(t&&t.isJoined())return t}return null}async getRooms(e,t,s=!1,i,o){const n=await this.getRoomDescriptors(e,t,s,i,o);return{items:n.items.map(e=>this.getRoomByDescriptor(e)),hasNext:n.hasNext,hasPrev:n.hasPrev}}async hideUnhideRoom(e,t=!0){await this.callApi("POST","HideUnhideConversation",{conversationId:e.id,hide:t})}async joinRoom(e){const t=this.getRoomByDescriptor(e);if(!t.isJoined()){if(this.joinedRooms.has(t.getId()))return t.myself=this.myself,t.tempDisconnect=!1,await this.syncRooms([t.getId()]),t.myself;try{t.myself=await super.joinRoom(e),t.tempDisconnect=!1,this.myself=t.myself,this.joinedRooms.add(t.getId()),await this.syncRooms([t.getId()])}catch(s){throw t.tempDisconnect=!0,this.joinedRooms.delete(t.getId()),s}}return t.myself}async joinRooms(e){if(this.config.joinAllRooms){const s=e.map(e=>this.getRoomByDescriptor(e));if(!this.connectedOnce||[...this.rooms.values()].some(e=>!e.isJoined()))try{const{roomIds:e,myself:t}=await this.joinAllRooms();this.myself=t,this.joinedRooms=new Set(e),await this.syncRooms(c()(s,e=>(e.tempDisconnect=!1,this.joinedRooms.has(e.getId())?(e.myself=this.myself,e.getId()):(e.myself=void 0,[]))))}catch(t){throw s.forEach(e=>{e.tempDisconnect=!0}),this.myself=void 0,this.joinedRooms=new Set,t}}else await Promise.all(e.map(e=>this.joinRoom(e)))}async removeFromChat(e,t){const s=e.id,i=await this.getRoomById(s);if(!i||!i.isJoined())throw new Error("removeFromChat failed. Room not joined");return new Promise((e,i)=>{const o=h.a.create("removeFromChat",s),n=h.c.forRoomRequest(s,o.requestId,()=>{this.offRespRemoveFromChat(n),this.offError(r),e()}),r=h.c.forError(o.requestId,e=>{this.offRespRemoveFromChat(n),this.offError(r),i(e)});this.onRespRemoveFromChat(n),this.onError(r),this.emitRemoveFromChat(o,t)})}async reportRoomUser(e,t,s){await this.callApi("POST","ReportConversationParticipant",{conversationId:e.id,memberId:t,reason:s})}async resetPushNotificationSetting(e){return this.callApi("POST","ResetPushNotificationSetting",{conversationId:e.id})}async sendMessageAPI(e,t){await this.callApi("POST","SendMessage",{attachments:t.attachmentInfos&&t.attachmentInfos.map(e=>e.attachmentId),content:t.contents,conversationId:e.id})}async sendMessagePending(e,t){const s=e.id,i=await this.getRoomById(s);if(!this.isConnected()||!i)throw new Error("sendMessagePenfing failed");const o=h.a.create("sendMessage",s);t.requestId=o.requestId,t.pending||(t.pending=!0,this.fireSyntheticEvent(l.d.MESSAGE_STATE,o));try{return await this.sendMessageImpl(e,t.requestId,t.message)}catch(n){console.log("Failed to send message. Enqueing for later...")}t.failed&&!t.pending||(t.failed=!0,t.pending=!1,this.fireSyntheticEvent(l.d.MESSAGE_STATE,o))}async sendMessageImpl(e,t,s){const i=e.id,o=await this.getRoomById(i);if(!this.isConnected()||!o)throw new Error("sendMessageImpl failed. Room not joined");return new Promise((e,o)=>{let n=0;this.baseConfig.requestTimeoutMs>0&&(n=setTimeout(()=>{this.offRespChatMessage(a),this.offError(c),this.logTimeout("sendMessage",this.baseConfig.requestTimeoutMs),o("timeout")},this.baseConfig.requestTimeoutMs));const r={requestId:t,roomId:i},a=h.c.forRoomRequest(i,r.requestId,()=>{this.offRespChatMessage(a),this.offError(c),clearTimeout(n),e()}),c=h.c.forError(r.requestId,e=>{this.offRespChatMessage(a),this.offError(c),clearTimeout(n),o(e)});this.onRespChatMessage(a),this.onError(c),this.emitChatMessage(r,s)})}async sendTyping(e){const t=e.id,s=await this.getRoomById(t);if(!s||!s.isJoined())throw new Error("sendTyping failed. Room not joined");return new Promise((e,s)=>{const i=h.a.create("sendTyping",t),o=h.c.forRoomRequest(t,i.requestId,()=>{this.offRespTyping(o),this.offError(n),e()}),n=h.c.forError(i.requestId,e=>{this.offRespTyping(o),this.offError(n),s(e)});this.onRespTyping(o),this.onError(n),this.emitTyping(i)})}async sendSeenMessage(e,t){const s=e.id,i=await this.getRoomById(s);if(!i||!i.isJoined())throw new Error("sendSeenMessage. Room not joined");return new Promise((e,i)=>{const o=h.a.create("sendSeenMessage",s),n=h.c.forRoomRequest(s,o.requestId,()=>{this.offRespSeenMessage(n),this.offError(r),e()}),r=h.c.forError(o.requestId,e=>{this.offRespSeenMessage(n),this.offError(r),i(e)});this.onRespSeenMessage(n),this.onError(r),this.emitSeenMessage(o,t)})}async setHeadline(e){return new Promise((t,s)=>{const i=h.a.create("setHeadline"),o=h.c.forRequest(i.requestId,()=>{this.offRespSetHeadline(o),this.offError(n),t()}),n=h.c.forError(i.requestId,e=>{this.offRespSetHeadline(o),this.offError(n),s(e)});this.onRespSetHeadline(o),this.onError(n),this.emitSetHeadline(i,e)})}async setPushNotificationSetting(e,t){return this.callApi("POST","SetPushNotificationSetting",{conversationId:t.id,pushesOn:e})}async toggleBlockUser(e,t){t?await this.blockUser(e):await this.unblockUser(e)}async toggleBlockUserAPI(e,t){const s=t?"BlockUser":"UnblockUser";await this.callApi("POST",s,{memberId:e})}async unblockUser(e){return new Promise((t,s)=>{const i=h.a.create("unblockMember"),o=h.c.forRequest(i.requestId,()=>{this.offRespUnblockMember(o),this.offError(n),t()}),n=h.c.forError(i.requestId,e=>{this.offRespUnblockMember(o),this.offError(n),s(e)});this.onRespUnblockMember(o),this.onError(n),this.emitUnblockMember(i,e)})}async updateMessage(e,t,s){return new Promise((i,o)=>{const n=h.a.create("updateMessage"),r=h.c.forRequest(n.requestId,()=>{this.offRespChatMessageUpdate(r),this.offError(a),i()}),a=h.c.forError(n.requestId,e=>{this.offRespChatMessageUpdate(r),this.offError(a),o(e)});this.onRespChatMessageUpdate(r),this.onError(a),this.emitChatMessageUpdate(n,{messageId:e,isHidden:t,isStarred:s})})}async updateMessageAPI(e,t,s,i){await this.callApi("POST","UpdateMessage",{messageId:e,reportMessage:t,isHidden:s,isStarred:i})}async getRoomDescriptors(e,t,s,i,o){const n=await this.callApi("POST","SubscribedChats",{hideBlocked:s,memberIds:i,conversationTypes:o,pageNumber:e,pageSize:t});return n.chats.forEach(e=>{"number"==typeof e.type&&(e.type=u.parseType(e.type)),"string"==typeof e.latestMessageSentDate&&(e.latestMessageSentDate=new Date(e.latestMessageSentDate)),e.participants&&e.participants.forEach(e=>{"string"==typeof e.dateSeen&&(e.dateSeen=new Date(e.dateSeen))})}),{hasPrev:e>0,hasNext:n.isMore,items:n.chats}}getTempDisconnectedRooms(){return[...this.rooms.values()].filter(e=>e.tempDisconnect).map(e=>e.getDescriptor())}setTempDisconnectedRooms(e){[...this.joinedRooms].filter(t=>!e.includes(t)).forEach(e=>{const t=this.rooms.get(e);t&&t.isJoined()&&(t.tempDisconnect=!0,this.joinedRooms.delete(e))})}async getRoomDescriptorsById(e){const t=await this.callApi("POST","GetChats",{conversationIds:e});return t.forEach(e=>{"number"==typeof e.type&&(e.type=u.parseType(e.type)),"string"==typeof e.latestMessageSentDate&&(e.latestMessageSentDate=new Date(e.latestMessageSentDate)),e.participants&&e.participants.forEach(e=>{"string"==typeof e.dateSeen&&(e.dateSeen=new Date(e.dateSeen))})}),t}async getRoomDescriptorById(e){return(await this.getRoomDescriptorsById([e]))[0]}handleDisconnect(){return super.handleDisconnect(),[...this.rooms.values()].forEach(e=>{e.myself&&(e.tempDisconnect=!0)}),this.joinedRooms=new Set,!0}async init(e=0){var t=this;this.config.socketUrl&&(await super.init(e),this.onEventInternal(l.a.ADD_INFORMED,(async function(e){return await t.joinRoom({id:e.roomId}),[e]})),this.onEventInternal(l.a.CHAT_MESSAGE,(async function(e,s){"string"==typeof s.sentDate&&(s.sentDate=new Date(s.sentDate));const o=await t.getRoomById(e.roomId),n=o.getDescriptor(),r=n.participants,a=r&&r.find(e=>e.participant.memberId===s.sentBy.memberId);return a&&(s.sentBy=Object(i.a)({},a.participant)),o.myself===s.sentBy.memberId&&o.markPendingMessageSent(e),t.roomUpdateSeen(o,s.sentBy.memberId,s.messageIndex,s.sentDate),t.syncRoomUser(o,s.sentBy,"typeoff"),await o.syncMessages([s]),n.latestMessageIndex=s.messageIndex,n.latestMessageSender=s.sentBy,n.latestMessageSentDate=s.sentDate,n.latestMessageText=s.contents,[e,s]})),this.onEventInternal(l.a.LOAD_USERS_IN_ROOM,(async function(e,s){const i=t.getRoomLoaded(e.roomId);if(null!==i)return s.forEach(e=>t.syncRoomUser(i,{memberId:e},"join")),t.fireSyntheticEvent(l.d.USERS_UPDATED,e),[e,s]})),this.onEventInternal(l.a.CHAT_CLOSED,(async function(e){const s=t.getRoomLoaded(e.roomId);if(null!==s){const t=s.getDescriptor();if(!t.isClosed)return t.isClosed=!0,[e]}})),this.onEventInternal(l.a.HEADLINE_SET,(async function(e,s,i){const o=t.getRoomLoaded(e.roomId);return null!==o&&t.roomUpdateHeadline(o,s,i),[e,s,i]})),this.onEventInternal(l.a.PERMISSION_DISCONNECT,(async function(e,s){const i=t.getRoomLoaded(e.roomId);return t.joinedRooms.delete(e.roomId),null!==i&&(i.myself=void 0),[e,s]})),this.onEventInternal(l.a.SEEN_MESSAGE,(async function(e,s,i){const o=t.getRoomLoaded(e.roomId);return null!==o&&t.roomUpdateSeen(o,s,i,new Date),[e,s,i]})),this.onEventInternal(l.a.TYPING,(async function(e,s,i){const o=t.getRoomLoaded(e.roomId);if(null!==o){const n=t.syncRoomUser(o,{memberId:s},"typeon"),a=o.getId()+s;if(t.typingFunctions.has(a)||t.typingFunctions.set(a,r()(()=>{t.syncRoomUser(o,{memberId:s},"typeoff")&&t.fireSyntheticEvent(l.d.NOT_TYPING,e,s)},t.config.typingTimeout||5e3)),t.typingFunctions.get(a)(),n)return[e,s,new Date(i)]}})),this.onEventInternal(l.a.USER_ADD,(async function(e,s){const i=t.getRoomLoaded(e.roomId);if(null!==i&&t.syncRoomUser(i,s,"add"))return[e,s]})),this.onEventInternal(l.a.USER_JOIN,(async function(e,s){const i=t.getRoomLoaded(e.roomId);if(null!==i&&t.syncRoomUser(i,{memberId:s},"join"))return[e,s]})),this.onEventInternal(l.a.USER_LEAVE,(async function(e,s){const i=t.getRoomLoaded(e.roomId);if(null!==i&&t.syncRoomUser(i,{memberId:s},"leave"))return[e,s]})),this.onEventInternal(l.a.USER_REMOVE,(async function(e,s){const i=t.getRoomLoaded(e.roomId);if(null!==i&&t.syncRoomUser(i,{memberId:s},"remove"))return[e,s]})),this.setAutoRejoin())}async joinAllRooms(){return new Promise((e,t)=>{let s=0;this.baseConfig.requestTimeoutMs>0&&(s=setTimeout(()=>{this.offRespJoinAllRooms(o),this.offError(n),this.logTimeout("joinAllRooms",this.baseConfig.requestTimeoutMs),t("timeout")},this.baseConfig.requestTimeoutMs));const i=h.a.create("joinAllRooms"),o=h.c.forRequest(i.requestId,(t,i)=>{this.offRespJoinAllRooms(o),this.offError(n),clearTimeout(s),e({roomIds:t,myself:i})}),n=h.c.forError(i.requestId,e=>{this.offRespJoinAllRooms(o),this.offError(n),clearTimeout(s),t(e)});this.onRespJoinAllRooms(o),this.onError(n),this.emitJoinAllRooms(i)})}async syncRooms(e){var t=this;if(e&&e.length>0){console.log("syncing rooms",e);const s=await this.getRoomDescriptorsById(e);await Promise.all(s.map((async function(e){const s=e.id;let i;if(t.rooms.has(s)?(i=t.rooms.get(s),i.updateDescriptor(e)):i=await t.getRoomByDescriptor(e),!i||!i.isJoined())throw new Error("syncRoom failed. Room not joined");t.emitLoadUsersInRoom(h.a.create("loadUsersInRoom",e.id)),await i.syncMessages();const o={requestId:"",roomId:s};t.fireSyntheticEvent(l.d.MESSAGE_STATE,o)})))}}syncRoomUser(e,t,s){const i=e.getDescriptor(),o=i&&i.participants;if(o){const e=o.findIndex(e=>e.participant.memberId===t.memberId);switch(s){case"add":if(e<0)return o.push({connectedCount:0,dateSeen:new Date(0),participant:t,lastSeenIndex:0}),!0;break;case"join":if(e>=0)return o[e].connectedCount||(o[e].connectedCount=0),o[e].connectedCount++,!0;break;case"leave":if(e>=0&&o[e].connectedCount>0)return o[e].connectedCount--,!0;break;case"remove":if(e>=0)return o.splice(e,1),!0;break;case"typeoff":case"typeon":if(e>=0&&!!o[e].typing!=("typeon"===s))return o[e].typing=!o[e].typing,!0}}return!1}roomUpdateSeen(e,t,s,i){const o=e.getDescriptor();e.getMyself()===t&&(o.lastSeenIndex=s);const n=o&&o.participants;if(n){const e=n.findIndex(e=>e.participant.memberId===t);e>=0&&(n[e].lastSeenIndex=s,n[e].dateSeen=i)}}roomUpdateHeadline(e,t,s){const i=e.getDescriptor(),o=i&&i.participants;if(o){const e=o.findIndex(e=>e.participant.memberId===t);e>=0&&(o[e].participant.headline=s)}}emitAddToChat(e,t){this.socket.emit(l.b.ADD_TO_CHAT,e,t)}emitBlockMember(e,t){this.socket.emit(l.b.BLOCK_MEMBER,e,t)}emitChatMessage(e,t){this.socket.emit(l.b.CHAT_MESSAGE,e,t)}emitChatMessageUpdate(e,t){this.socket.emit(l.b.CHAT_MESSAGE_UPDATE,e,t)}emitJoinAllRooms(e){this.socket.emit(l.b.JOIN_ALL_ROOMS,e)}emitRemoveFromChat(e,t){this.socket.emit(l.b.REMOVE_FROM_CHAT,e,t)}emitSeenMessage(e,t){this.socket.emit(l.b.SEEN_MESSAGE,e,t)}emitSetHeadline(e,t){this.socket.emit(l.b.SET_HEADLINE,e,t)}emitTyping(e){this.socket.emit(l.b.TYPING,e)}emitUnblockMember(e,t){this.socket.emit(l.b.UNBLOCK_MEMBER,e,t)}onRespAddToChat(e){this.socket.on(l.c.ADD_TO_CHAT,e)}offRespAddToChat(e){this.socket.off(l.c.ADD_TO_CHAT,e)}onRespBlockMember(e){this.socket.on(l.c.BLOCK_MEMBER,e)}offRespBlockMember(e){this.socket.off(l.c.BLOCK_MEMBER,e)}onRespChatMessage(e){this.socket.on(l.c.CHAT_MESSAGE,e)}offRespChatMessage(e){this.socket.off(l.c.CHAT_MESSAGE,e)}onRespChatMessageUpdate(e){this.socket.on(l.c.CHAT_MESSAGE_UPDATE,e)}offRespChatMessageUpdate(e){this.socket.off(l.c.CHAT_MESSAGE_UPDATE,e)}onRespJoinAllRooms(e){this.socket.on(l.c.JOIN_ALL_ROOMS,e)}offRespJoinAllRooms(e){this.socket.off(l.c.JOIN_ALL_ROOMS,e)}onRespRemoveFromChat(e){this.socket.on(l.c.REMOVE_FROM_CHAT,e)}offRespRemoveFromChat(e){this.socket.off(l.c.REMOVE_FROM_CHAT,e)}onRespSeenMessage(e){this.socket.on(l.c.SEEN_MESSAGE,e)}offRespSeenMessage(e){this.socket.off(l.c.SEEN_MESSAGE,e)}onRespSetHeadline(e){this.socket.on(l.c.SET_HEADLINE,e)}offRespSetHeadline(e){this.socket.off(l.c.SET_HEADLINE,e)}onRespTyping(e){this.socket.on(l.c.TYPING,e)}offRespTyping(e){this.socket.off(l.c.TYPING,e)}onRespUnblockMember(e){this.socket.on(l.c.UNBLOCK_MEMBER,e)}offRespUnblockMember(e){this.socket.off(l.c.UNBLOCK_MEMBER,e)}onRoomAdd(e){this.addUserHandler(l.a.ADD_INFORMED,e)}onChatMessage(e){this.addUserHandler(l.a.CHAT_MESSAGE,e)}onChatMessageUpdate(e){this.addUserHandler(l.a.CHAT_MESSAGE_UPDATE,e)}onChatClosed(e){this.addUserHandler(l.a.CHAT_CLOSED,e)}onHeadlineSet(e){this.addUserHandler(l.a.HEADLINE_SET,e)}onPermissionDisconnect(e){this.addUserHandler(l.a.PERMISSION_DISCONNECT,e)}onSeenMessage(e){this.addUserHandler(l.a.SEEN_MESSAGE,e)}onTyping(e){this.addUserHandler(l.a.TYPING,e)}onUserAdd(e){this.addUserHandler(l.a.USER_ADD,e)}onUserRemove(e){this.addUserHandler(l.a.USER_REMOVE,e)}onMessageStateChange(e){this.addUserHandler(l.d.MESSAGE_STATE,e)}onNotTyping(e){this.addUserHandler(l.d.NOT_TYPING,e)}}},1723:function(e,t,s){"use strict";var i=s(49),o=s(0),n=s.n(o),r=s(5),a=s(40),c=s(18),d=s(1867),l=s(1596),h=s(87),E=s(498),u=s(32),m=s(867),R=s(406),f=s(97),O=s(841),p=s(50),g=s(25),I=s(387),_=s(1557),S=s(1571),T=s(1365),b=s(10),y=s(28),A=s(1146),C=s(7),D=s(173),N=s(13),j=s(592),M=s(1826),P=s(166),U=s(1594),v=s(1147),w=s(392),L=s(1286),k=s(619),B=s(81),V=s(277),H=s(541),q=s(1863),G=s(1868),x=s(840),J=s(213),z=s(192),F=s(1792),K=s(1184),Y=s(1865),W=s(1294),Q=s(1866),$=s(1864),Z=s(2178),X=s.n(Z);const ee=Object(i.a)({resolved:{},chunkName:()=>"cart-AddedToCart",isReady(e){const t=this.resolve(e);return!0===this.resolved[t]&&!!s.m[t]},importAsync:()=>Promise.all([s.e(18),s.e(21),s.e(155)]).then(s.bind(null,1949)),requireAsync(e){const t=this.resolve(e);return this.resolved[t]=!1,this.importAsync(e).then(e=>(this.resolved[t]=!0,e))},requireSync(e){const t=this.resolve(e);return s(t)},resolve(){return 1949}}),te=Object(i.a)({resolved:{},chunkName:()=>"ListingTools",isReady(e){const t=this.resolve(e);return!0===this.resolved[t]&&!!s.m[t]},importAsync:()=>Promise.all([s.e(35),s.e(43),s.e(71),s.e(142)]).then(s.bind(null,1943)),requireAsync(e){const t=this.resolve(e);return this.resolved[t]=!1,this.importAsync(e).then(e=>(this.resolved[t]=!0,e))},requireSync(e){const t=this.resolve(e);return s(t)},resolve(){return 1943}}),se=n.a.lazy(()=>s.e(90).then(s.bind(null,1941))),ie="mainCmsContent",oe="mainProduct",ne=Object(b.a)("PdpCms"),re=n.a.memo(()=>{const{addedToCartItems:e,collabId:t,focusAreaDialogState:s,hasAttemptedAddToCart:i,hasOverallRating:r,hasProductStats:a,hasReviews:d,makerProfile:l,pageSectionIds:E,productId:u,productTitle:R,productType:O,recentDesign:p,rootProductId:g,rootProductType:S,schedule:T,storeId:b,zilMarkup:D}=ae(),N=Object(y.c)(),j={breadcrumbs:oe+"_breadcrumbs",mobileA2cAccessories:oe+"_a2cAccessories",mobileA2cRelatedProducts:oe+"_a2cRelatedProducts",mobileA2cSuggestedIdeaBoards:oe+"_a2cSuggestedIdeaBoards",product:oe,productMediaGallery:oe+"_productMediaGallery",relatedSellerProducts:oe+"_relatedSellerProducts",reviews:oe+"_reviews",reviewsMediaGallery:oe+"_reviewsMediaGallery"},[M,w]=Object(o.useState)(!0),k=ce();return Object(o.useEffect)(()=>{k.addSliceReducer(oe,m.a);const e=Object(f.o)(window.location.hash);k.initializeProduct(oe,{collabId:t,productOptionOverrides:e}),Object(C.a)().isDisneyIframe||k.getGroupedProducts(oe),k.addSliceReducer(Object(I.e)(oe),_.a),k.addSliceReducer(j.productMediaGallery,L.a),k.getProductMediaGallery(j.productMediaGallery,oe,30),k.addSliceReducer(j.reviews,q.a),r||k.fetchOverallProductRatings(j.reviews,oe),d||("0"!==g&&O===S||k.selectReviewsForRootProduct(!1,j.reviews,j.reviewsMediaGallery,oe),k.selectReviewsPage(1,j.reviews,oe)),k.addSliceReducer(ie,P.a)},[]),Object($.a)(oe,j.breadcrumbs),Object(o.useEffect)(()=>{const e=N("Boolean","ZExp","ShowPDPCreatorCard",!1);"0"!==b&&k.getUserFollowingStats(b,e),l&&"0"!==l.ownerId&&k.getUserFollowingStats(l.ownerId,e)},[null==l?void 0:l.ownerId,b,k]),Object(o.useEffect)(()=>{i&&ee.preload()},[i]),Object(K.f)(j.product),Object(K.g)(j.product),Object(A.a)(null==T?void 0:T.id),Object(v.a)(ie),n.a.createElement(J.a,{googleAdsQuery:R,onAddedToCartComponentClass:(null==e?void 0:e.length)>0?ee:void 0},n.a.createElement(c.a,null,n.a.createElement(Y.a,{productStateKey:oe})),n.a.createElement("div",{className:ne("&"),itemScope:!0,itemType:"http://schema.org/Product"},a&&n.a.createElement(c.a,null,n.a.createElement(te,{productStateKey:oe})),n.a.createElement(c.a,null,n.a.createElement(U.a,{className:ne("&-cmsContent"),departmentId:null==T?void 0:T.departmentId,pageSectionIds:E,productStateKey:j.product,stateKey:ie})),D&&D.hasResults&&n.a.createElement(c.a,null,n.a.createElement("div",{className:"row"},n.a.createElement(F.a,{relatedSearches:D.relatedSearches,relatedProducts:D.relatedProducts,twoColumns:!0})))),p&&M&&n.a.createElement(c.a,{onError:()=>{w(!1)}},n.a.createElement(Q.a,{onCancel:()=>{Object(K.b)(u),w(!1)},onRequestClose:()=>{w(!1)},recentDesign:p})),!1,s&&n.a.createElement(c.a,null,n.a.createElement(n.a.Suspense,{fallback:n.a.createElement(h.a,{isShown:!0})},n.a.createElement(se,{productStateKey:j.product,triggeredByAreaSwitch:s.triggeredByAreaSwitch}))),!1)}),ae=()=>Object(r.e)(e=>{var t;const s=Object(g.b)(e,oe),i=Object(g.b)(e,s.designStateKey),o=Object(g.b)(e,ie),n=null==o?void 0:o.schedule,r=null!=n?e.entities.cmsSchedules[n]:null,a=null==o?void 0:o.pageSections,c=e.entities.profiles[s.makerProfileId],d=Object(g.b)(e,oe+"_reviews"),l=!!d,h=!!d&&void 0!==d.overallRating,E=Object(K.a)(s);return{addedToCartItems:Object(M.a)(e),collabId:e.page.collabId,focusAreaDialogState:null==i||null===(t=i.settings)||void 0===t?void 0:t.isPromptingToFocusArea,hasAttemptedAddToCart:s.hasAttemptedAddToCart,hasOverallRating:h,hasProductStats:!!e.productStats,hasReviews:l,makerProfile:c,pageSectionIds:a,productId:s.id,productTitle:s.title,productType:s.productType,recentDesign:E,rootProductId:s.rootProductId,rootProductType:s.rootProductType,schedule:r,storeId:s.storeId,zilMarkup:e.zilMarkup}},N.q),ce=()=>{const e=Object(r.d)();return Object(o.useMemo)(()=>Object(a.b)({addSliceReducer:p.c,fetchOverallProductRatings:H.p,getGroupedProducts:u.R,getProductMediaGallery:w.f,getUserFollowingStats:B.j,initializeProduct:u.U,selectReviewsPage:H.v,selectReviewsForRootProduct:H.u},e),[])},de=()=>[j.a,d.a,l.a,E.a,k.a,O.a,R.a,V.a,G.a,x.a,S.a,T.a,...z.a];t.a=Object(D.a)(re,W.a,de)},1792:function(e,t,s){"use strict";s.d(t,"a",(function(){return R}));var i=s(9),o=s.n(i),n=s(0),r=s.n(n),a=s(5),c=s(8),d=s(16),l=s(111);const h=e=>{const[t,s]=Object(l.b)({buffer:300});return r.a.createElement("div",{ref:t,className:"zil-sf-widget-merchant-img"},r.a.createElement(d.a,{href:e.link},s?r.a.createElement("img",{src:e.img,alt:e.label}):e.label))};class E extends r.a.Component{shouldComponentUpdate(){return!1}getLinkMarkup(e){return r.a.createElement(d.a,{href:this.props.productMarkup.link},e)}render(){return r.a.createElement("div",{className:"zil-product"},r.a.createElement("div",{className:"zil-sf-widget"},r.a.createElement("div",{className:"zil-sf-widget-merchant-cont"},r.a.createElement("div",{className:"zil-sf-widget-merchant-img"},r.a.createElement(h,{img:this.props.productMarkup.img,link:this.props.productMarkup.link,label:this.props.productMarkup.label})),r.a.createElement("div",{className:"zil-sf-widget-merchant-title"},this.getLinkMarkup(this.props.productMarkup.label)),r.a.createElement("div",{className:"zil-sf-widget-merchant-desc"},this.props.productMarkup.desc))))}}class u extends r.a.Component{shouldComponentUpdate(){return!1}render(){return r.a.createElement("div",{className:"zil-related-query"},r.a.createElement(d.a,{className:"zil-related-query-link",href:this.props.queryMarkup.link},this.props.queryMarkup.label)," ")}}s(1931);class m extends r.a.Component{shouldComponentUpdate(e){return!1}render(){const{twoColumns:e,relatedSearches:t,relatedProducts:s}=this.props,i=o()("ZILMarkup",{"ZILMarkup--twoColumns":e});let n=t&&t.length>0?r.a.createElement("div",{className:"zil-related-searches-widget"},r.a.createElement("div",{className:"zil-related-heading"},r.a.createElement("span",null,this.props.zString("zi_search_zil_SearchQuery"))),t.map((e,t)=>r.a.createElement(u,{key:t,queryMarkup:e}))):null,a=s&&s.length>0?r.a.createElement("div",{className:"zil-related-products"},r.a.createElement("div",{className:"zil-related-heading"},r.a.createElement("span",null,this.props.zString("zi_search_zil_SearchProduct"))),s.map((e,t)=>r.a.createElement(E,{key:t,productMarkup:e}))):null;return r.a.createElement("div",{className:i},n,a)}}const R=Object(a.b)((e,t)=>({zString:Object(c.a)(e),twoColumns:t.twoColumns,relatedProducts:t.relatedProducts,relatedSearches:t.relatedSearches}))(m)},1826:function(e,t,s){"use strict";s.d(t,"a",(function(){return a}));var i=s(2),o=s(48),n=s.n(o),r=s(27);const a=Object(r.a)(e=>e.entities.cartItems,e=>e.Cart.addedToCartPaletteItems,e=>e.entities.products,(e,t,s)=>null==t||null==e?null:t.map(t=>{const o=e[t.cartItemId],r=s[t.productId];return o&&r?Object(i.a)(Object(i.a)(Object(i.a)({},n()(r,"isVizLite","productTypeName","storeId")),o),t):null}).filter(Boolean))},1863:function(e,t,s){"use strict";s.d(t,"a",(function(){return l}));var i=s(2),o=s(224),n=s.n(o),r=s(24),a=s.n(r),c=s(541);const d={cacheDefeat:void 0,entityIds:[],fetchByRootProductId:!0,overallNumResults:0,overallRating:0,pageNum:1,pageSize:10,ratingFilter:null,sortBy:"MostRelevant",stats:void 0,totalPages:1,totalResults:0,unfilteredStats:void 0};function l(e=d,t){var s;switch(t.type){case c.k:const o=t;let r;return r=!e.ratingFilter&&(null===(s=o.state)||void 0===s?void 0:s.stats)&&!n()(o.state.stats,e.unfilteredStats)?{$merge:Object(i.a)(Object(i.a)({},o.state),{},{unfilteredStats:o.state.stats})}:{$merge:o.state},a()(e,r);default:return e}}},1864:function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var i=s(0),o=s(5),n=s(25);function r(e,t){const{brazeInitialized:o,productId:n,price:r,breadcrumb:c,storeHandle:d,productType:l}=a(e,t);Object(i.useEffect)(()=>{o&&Promise.all([s.e(40),s.e(65),s.e(73)]).then(s.bind(null,697)).then(({logCustomEvent:e})=>{e("product_page_view",{product_id:n,price:r,product_category:c,store_handle:d,product_type:l})})},[o])}const a=(e,t)=>Object(o.e)(s=>{const i=Object(n.b)(s,e),o=Object(n.b)(s,t).links.map(e=>e.title).slice(0,5).join("/");return{brazeInitialized:s.braze.initialized,productId:i.id,price:i.pricing.unitPrice,breadcrumb:o,storeHandle:i.storeHandle,productType:i.productType}},o.c)},1865:function(e,t,s){"use strict";s.d(t,"a",(function(){return h}));var i=s(270),o=s(0),n=s.n(o),r=s(5),a=s(254),c=s(37),d=s(28),l=s(7);const h=Object(o.memo)(({productStateKey:e})=>{const t=Object(d.c)(),{initialPrettyPreferredViewUrl:s,isInstance:o,isVizLite:r}=E(e),c=t("Boolean","Z3","PreloadDesktopRealview",!1);t("Boolean","Z3","PreloadMWRealview",!1);if(!(!("false"===Object(l.a)().requestParams.preload)&&o&&c&&s))return null;{const e=736,t=1080,o=Object(a.f)(s,t),r=(t/e).toFixed(2);return n.a.createElement(i.a,null,n.a.createElement("link",{as:"image",imagesrcset:`${s} 1x, ${o} ${r}x`,rel:"preload"}))}}),E=e=>{const{initialPrettyPreferredViewUrl:t,isInstance:s,isVizLite:i}=Object(c.d)(Object(r.f)().getState(),e);return Object(o.useMemo)(()=>({initialPrettyPreferredViewUrl:t,isInstance:s,isVizLite:i}),[])}},1866:function(e,t,s){"use strict";s.d(t,"a",(function(){return f}));var i=s(0),o=s.n(i),n=s(181),r=s(16),a=s(80),c=s(30),d=s(151),l=s(10),h=s(59),E=s(7),u=s(8),m=s(14);s(2179);const R=Object(l.a)("RecentDesignDialog"),f=e=>{const t=Object(u.e)(),s=Object(m.f)(),{onCancel:l,onRequestClose:f,recentDesign:O}=e;Object(i.useEffect)(()=>{Object(c.h)(d.a.RecentDesignDialogShown())},[]);const{realviews:p,mainDesignViewId:g}=O.realviewsProduct;let I;I=Object(n.d)(Object(n.b)(p,g),Object(E.a)().dynamicRealviewUrlBase,{hide:"bleed,safe,visible,visibleMask",max_dim:360});const _=new Date(Date.now()-1e3*O.secondsElapsed),S=Object(h.e)(_,{style:"numeric"},{});return o.a.createElement(a.default,{cancelText:t("zi_product_RecentDesignDialog_Cancel"),className:R("&"),okText:t("zi_product_RecentDesignDialog_Ok"),onCancel:l,onOk:()=>{Object(c.h)(d.a.ClickOnYesInRecentDesignDialog()),window.location.href=e.recentDesign.url},onRequestClose:f,title:t("zi_product_RecentDesignDialog_Title")},o.a.createElement("div",{className:R("&-contents")},I?o.a.createElement("img",{className:R("&-img"),src:I,alt:t("zi_share_LinkToThisDialog_DesignView")}):null,o.a.createElement("p",{className:R("&-text")},t("zi_product_RecentDesignDialog_Text",{time:S}),o.a.createElement("br",null),o.a.createElement(r.a,{href:s("WwwSPag","lgn/signin?mlru=inprogress")},t("zi_product_RecentDesignDialog_ViewAllSavedDesigns")))))}},1867:function(e,t,s){"use strict";s.d(t,"a",(function(){return c}));var i=s(1),o=s(4),n=s(25),r=s(831);function*a(e){try{const t=Object(n.b)(yield Object(i.k)(),e._stateKey),{breadcrumbLinkType:s,hideInvisibleDepartments:a,linkCurrent:c,originPageLink:d,urlBase:l}=t,h=yield Object(i.c)(o.c,"/svc/z3/breadcrumbs/get",{breadcrumbLinkType:s,dp:e.dp,hideInvisibleDepartments:a,linkCurrent:c,originPageLinkTitle:null!=d?d.title:null,originPageLinkUrl:null!=d?d.url:null,urlBase:l});h.data.breadcrumbs&&(yield Object(i.i)(Object(r.c)(e._stateKey,h.data.breadcrumbs)))}catch(t){}}function*c(){yield Object(i.n)(r.b,a)}},1868:function(e,t,s){"use strict";s.d(t,"a",(function(){return N}));var i=s(0),o=s.n(i),n=s(1),r=s(16),a=s(11),c=s(37),d=s(25),l=s(4),h=s(8),E=s(103),u=s(297),m=s(541);function*R(e,t){try{const s=yield Object(n.c)(l.c,"/svc/z3/reviews/get2",e,{enableCsrf:!1});s.data.entities&&(yield Object(n.i)(Object(a.c)(s.data.entities)));const{entityIds:i,pageNum:o,pageSize:r,stats:c,totalResults:d}=s.data.reviews,h={cacheDefeat:e.cacheDefeat,entityIds:i,pageNum:o,pageSize:r,stats:c,totalResults:d};yield Object(n.i)(Object(m.z)(h,t))}catch(s){}}function*f(e){const t=D(yield Object(n.k)(),e);yield Object(n.c)(R,t,e._stateKey)}function*O(e){const t={cacheDefeat:(new Date).getTime()};yield Object(n.i)(Object(m.z)(t,e))}function*p(e){const t={rid:e.reviewId},s=yield Object(n.c)(l.e,"/svc/z3/reviews/deletehelpfulness",t);s.success&&(yield Object(n.i)(Object(a.c)(s.data.entities)),yield*O(e._stateKey))}function*g(e){const t={rid:e.reviewId},s=yield Object(n.k)(),i=Object(h.c)(s);if(!(yield*Object(u.a)({cancelText:i("zi_common_noProper"),message:i("zi_product_Reviews_Review_AreYouSureReportViolation"),okText:i("zi_common_yesProper"),titleText:i("zi_product_violation_title"),zString:i})))return;const o=yield Object(n.c)(l.e,"/svc/z3/reviews/flagreview",t);o.success&&(yield Object(n.i)(Object(a.c)(o.data.entities)),yield*O(e._stateKey))}function*I(e){try{const t=yield Object(n.k)(),s=Object(c.d)(t,e.productStateKey),i={rootProductId:s.rootProductId,productOption:s.productOption,productType:s.productType},o=yield Object(n.c)(l.c,"/svc/z3/reviews/getOverallProductRatings",i);if(o.success){const t={overallNumResults:o.data.overallNumResults,overallRating:o.data.overallRating};yield Object(n.i)(Object(m.z)(t,e._stateKey))}}catch(t){}}function*_(e){const t={rid:e.reviewId},s=yield Object(n.c)(l.e,"/svc/z3/reviews/deleteflag",t);s.success&&(yield Object(n.i)(Object(a.c)(s.data.entities)),yield*O(e._stateKey))}function*S(e){const t={helpful:e.isHelpful,rid:e.reviewId},s=yield Object(n.c)(l.e,"/svc/z3/reviews/updatehelpfulness",t);s.success&&(yield Object(n.i)(Object(a.c)(s.data.entities)),yield*O(e._stateKey))}function*T(e){const t=D(yield Object(n.k)(),e);t.pageNum=e.page,yield Object(n.c)(R,t,e._stateKey)}function*b(e){yield Object(n.i)(Object(m.z)({pageNum:1},e._stateKey));const t=D(yield Object(n.k)(),e);t.rating=e.ratingFilter,yield Object(n.i)(Object(m.z)({ratingFilter:e.ratingFilter,cacheDefeat:t.cacheDefeat},e._stateKey)),yield Object(n.i)(Object(m.s)(e.mediaGalleryStateKey,e._stateKey,e.productStateKey)),yield Object(n.c)(R,t,e._stateKey)}function*y(e){yield Object(n.i)(Object(m.z)({pageNum:1},e._stateKey));const t=D(yield Object(n.k)(),e);t.sortBy=e.sortBy,yield Object(n.i)(Object(m.z)({sortBy:e.sortBy,cacheDefeat:t.cacheDefeat},e._stateKey)),yield Object(n.i)(Object(m.s)(e.mediaGalleryStateKey,e._stateKey,e.productStateKey)),yield Object(n.c)(R,t,e._stateKey)}function*A(e){const t={fetchByRootProductId:e.fetchByRootProductId,pageNum:1,ratingFilter:null};yield Object(n.i)(Object(m.z)(t,e._stateKey));const s=D(yield Object(n.k)(),e);yield Object(n.i)(Object(m.s)(e.mediaGalleryStateKey,e._stateKey,e.productStateKey)),yield Object(n.c)(R,s,e._stateKey)}function*C(e){const t=yield Object(n.c)(l.e,"/svc/product/productreviews/canreview",{pd:e.pd,pt:e.pt});if(t.success){const{hasOthers:e,goToForm:s,reviewUrl:i,productsToReviewUrl:a}=t.data;if(s)location.href=i;else{const t=yield Object(n.k)(),s=Object(h.c)(t);yield*Object(E.a)({titleText:s("zi_product_Reviews_WriteAReviewDialog_Title"),message:o.a.createElement("div",null,s("zi_product_Reviews_WriteAReviewDialog_Message"),o.a.createElement("br",null),o.a.createElement("br",null),e?o.a.createElement(r.a,{href:a},s("zi_product_Reviews_WriteAReviewDialog_Link")):null)})}}}function D(e,t){const s=Object(d.b)(e,t._stateKey),i=Object(c.d)(e,t.productStateKey);return{cacheDefeat:s.cacheDefeat?s.cacheDefeat:(new Date).getTime(),pageNum:s.pageNum,pageSize:s.pageSize,productOption:i.productOption,productType:i.productType,rating:s.ratingFilter,rootProductId:s.fetchByRootProductId?i.rootProductId:0,sortBy:s.sortBy}}function*N(){yield Object(n.b)([Object(n.n)(m.a,C),Object(n.n)(m.f,f),Object(n.n)(m.b,_),Object(n.n)(m.c,p),Object(n.n)(m.d,I),Object(n.n)(m.e,g),Object(n.n)(m.g,A),Object(n.n)(m.h,T),Object(n.n)(m.i,b),Object(n.n)(m.j,y),Object(n.n)(m.l,S)])}},1931:function(e,t,s){},2176:function(e,t,s){s(312),s(313),s(314),s(315),s(316),s(317),s(149),e.exports=s(2177)},2177:function(e,t,s){"use strict";s.r(t);var i=s(171),o=s(1723);Object(i.a)(o.a),t.default=o.a},2178:function(e,t,s){},2179:function(e,t,s){},55:function(e,t,s){"use strict";s.d(t,"k",(function(){return o})),s.d(t,"l",(function(){return n})),s.d(t,"i",(function(){return r})),s.d(t,"m",(function(){return a})),s.d(t,"j",(function(){return d})),s.d(t,"b",(function(){return l})),s.d(t,"c",(function(){return h})),s.d(t,"a",(function(){return E})),s.d(t,"d",(function(){return u})),s.d(t,"f",(function(){return R})),s.d(t,"g",(function(){return f})),s.d(t,"e",(function(){return O})),s.d(t,"h",(function(){return p}));var i=s(3);class o{}Object(i.a)(o,"CREDENTIAL_REFRESH","REQUEST_CREDENTIAL_REFRESH"),Object(i.a)(o,"INITIAL_CONNECTION","REQUEST_INITIAL_CONNECTION"),Object(i.a)(o,"JOIN_ROOM","REQUEST_JOIN_ROOM"),Object(i.a)(o,"LIST_ROOMS","REQUEST_LIST_ROOMS"),Object(i.a)(o,"LOAD_USERS_IN_ROOM","REQUEST_LOAD_USERS_IN_ROOM");class n{}Object(i.a)(n,"CREDENTIAL_REFRESH","RESPONSE_CREDENTIAL_REFRESH"),Object(i.a)(n,"INITIAL_CONNECTION","RESPONSE_INITIAL_CONNECTION"),Object(i.a)(n,"JOIN_ROOM_SUCCESS","EVENT_JOIN_ROOM_SUCCESS"),Object(i.a)(n,"LIST_ROOMS","RESPONSE_LIST_ROOMS");class r{}Object(i.a)(r,"CONNECT","connect"),Object(i.a)(r,"CONNECT_ERROR","connect_error"),Object(i.a)(r,"CREDENTIAL_DISCONNECT","EVENT_CREDENTIAL_DISCONNECT"),Object(i.a)(r,"CREDENTIAL_WARNING","EVENT_CREDENTIAL_WARNING"),Object(i.a)(r,"DISCONNECT","disconnect"),Object(i.a)(r,"ERROR","EVENT_ERROR"),Object(i.a)(r,"LOAD_USERS_IN_ROOM","RESPONSE_LOAD_USERS_IN_ROOM"),Object(i.a)(r,"USER_JOIN","EVENT_USER_JOIN"),Object(i.a)(r,"USER_LEAVE","EVENT_USER_LEAVE");class a{}Object(i.a)(a,"SHUTDOWN","SYNT_EVENT_SHUTDOWN"),Object(i.a)(a,"STATE_UPDATED","SYNT_EVENT_STATE_UPDATED"),Object(i.a)(a,"USERS_UPDATED","SYNT_EVENT_USERS_UPDATED");class c{}Object(i.a)(c,"LOAD_USERS_IN_ROOM","SERVER_SYNT_LOAD_USERS_IN_ROOM"),Object(i.a)(c,"START_TRACE","SERVER_SYNT_START_TRACE"),Object(i.a)(c,"STOP_TRACE","SERVER_SYNT_STOP_TRACE"),Object(i.a)(c,"DUMP_TRACE","SERVER_SYNT_DUMP_TRACE");class d{}Object(i.a)(d,"PERM_DENIED","ERROR_PERM_DENIED"),Object(i.a)(d,"ROOM_NOT_JOINED","ERROR_ROOM_NOT_JOINED"),Object(i.a)(d,"UNKNOWN","ERROR_UNKNOWN");class l extends o{}Object(i.a)(l,"ADD_TO_CHAT","REQUEST_ADD_TO_CHAT"),Object(i.a)(l,"BLOCK_MEMBER","REQUEST_BLOCK_MEMBER"),Object(i.a)(l,"CHAT_MESSAGE","EVENT_CHAT_MESSAGE"),Object(i.a)(l,"CHAT_MESSAGE_UPDATE","REQUEST_CHAT_MESSAGE_UPDATE"),Object(i.a)(l,"SET_HEADLINE","REQUEST_SET_HEADLINE"),Object(i.a)(l,"INFORM_USER_ADD","REQUEST_INFORM_USER_ADD"),Object(i.a)(l,"JOIN_ALL_ROOMS","REQUEST_JOIN_ALL_ROOMS"),Object(i.a)(l,"REMOVE_FROM_CHAT","REQUEST_REMOVE_FROM_CHAT"),Object(i.a)(l,"SEEN_MESSAGE","EVENT_SEEN_MESSAGE"),Object(i.a)(l,"TYPING","EVENT_TYPING"),Object(i.a)(l,"UNBLOCK_MEMBER","REQUEST_UNBLOCK_MEMBER");class h extends n{}Object(i.a)(h,"ADD_TO_CHAT","RESPONSE_ADD_TO_CHAT"),Object(i.a)(h,"BLOCK_MEMBER","RESPONSE_BLOCK_MEMBER"),Object(i.a)(h,"CHAT_MESSAGE","RESPONSE_CHAT_MESSAGE"),Object(i.a)(h,"CHAT_MESSAGE_UPDATE","RESPONSE_CHAT_MESSAGE_UPDATE"),Object(i.a)(h,"SET_HEADLINE","RESPONSE_SET_HEADLINE"),Object(i.a)(h,"INFORM_USER_ADD","RESPONSE_USER_ADD"),Object(i.a)(h,"JOIN_ALL_ROOMS","RESPONSE_JOIN_ALL_ROOMS"),Object(i.a)(h,"REMOVE_FROM_CHAT","RESPONSE_REMOVE_FROM_CHAT"),Object(i.a)(h,"SEEN_MESSAGE","RESPONSE_SEEN_MESSAGE"),Object(i.a)(h,"TYPING","RESPONSE_TYPING"),Object(i.a)(h,"UNBLOCK_MEMBER","RESPONSE_UNBLOCK_MEMBER");class E extends r{}Object(i.a)(E,"ADD_INFORMED","EVENT_ADD_INFORMED"),Object(i.a)(E,"CHAT_CLOSED","EVENT_CHAT_CLOSED"),Object(i.a)(E,"CHAT_MESSAGE","EVENT_CHAT_MESSAGE"),Object(i.a)(E,"CHAT_MESSAGE_UPDATE","EVENT_CHAT_MESSAGE_UPDATE"),Object(i.a)(E,"HEADLINE_SET","EVENT_HEADLINE_SET"),Object(i.a)(E,"PERMISSION_DISCONNECT","EVENT_PERMISSION_DISCONNECT"),Object(i.a)(E,"SEEN_MESSAGE","EVENT_SEEN_MESSAGE"),Object(i.a)(E,"TYPING","EVENT_TYPING"),Object(i.a)(E,"USER_ADD","EVENT_USER_ADD"),Object(i.a)(E,"USER_REMOVE","EVENT_USER_REMOVE");class u extends a{}Object(i.a)(u,"MESSAGE_STATE","SYNT_EVENT_MESSAGE_STATE"),Object(i.a)(u,"NOT_TYPING","SYNT_EVENT_NOT_TYPING");class m extends c{}Object(i.a)(m,"INFORM_USER_ADD","SERVER_SYNT_INFORM_USER_ADD"),Object(i.a)(m,"INFORM_UPDATE_MESSAGE","SERVER_SYNT_INFORM_UPDATE_MESSAGE"),Object(i.a)(m,"USER_REMOVE","SERVER_SYNT_USER_REMOVE");class R extends o{}Object(i.a)(R,"ADD_COLLABORATOR","REQUEST_ADD_COLLABORATOR"),Object(i.a)(R,"END_COLLABORATION","REQUEST_END_COLLABORATION"),Object(i.a)(R,"GIVE_DRIVER","REQUEST_GIVE_CONTROL"),Object(i.a)(R,"REMOVE_COLLABORATOR","REQUEST_REMOVE_COLLABORATOR"),Object(i.a)(R,"SET_PRIVATE_COLLABORATION","REQUEST_SET_PRIVATE_COLLABORATION"),Object(i.a)(R,"SET_PUBLIC_COLLABORATION","REQUEST_SET_PUBLIC_COLLABORATION"),Object(i.a)(R,"UI_UPDATE","EVENT_UI_UPDATE"),Object(i.a)(R,"UPDATE_DESIGN","REQUEST_UPDATE_DESIGN"),Object(i.a)(R,"YIELD_DRIVER","REQUEST_YIELD_CONTROL");class f extends n{}Object(i.a)(f,"ADD_COLLABORATOR","RESPONSE_ADD_COLLABORATOR"),Object(i.a)(f,"END_COLLABORATION","RESPONSE_END_COLLABORATION"),Object(i.a)(f,"GIVE_DRIVER","RESPONSE_GIVE_CONTROL"),Object(i.a)(f,"JOB_INVITE_UPDATE","RESPONSE_JOB_INVITE_UPDATE"),Object(i.a)(f,"JOB_UPDATE","RESPONSE_JOB_UPDATE"),Object(i.a)(f,"REMOVE_COLLABORATOR","RESPONSE_REMOVE_COLLABORATOR"),Object(i.a)(f,"SET_PRIVATE_COLLABORATION","RESPONSE_SET_PRIVATE_COLLABORATION"),Object(i.a)(f,"SET_PUBLIC_COLLABORATION","RESPONSE_SET_PUBLIC_COLLABORATION"),Object(i.a)(f,"UI_UPDATE","RESPONSE_UI_UPDATE"),Object(i.a)(f,"UPDATE_DESIGN","RESPONSE_UPDATE_DESIGN"),Object(i.a)(f,"YIELD_DRIVER","RESPONSE_YIELD_CONTROL");class O extends r{}Object(i.a)(O,"APPEAL","EVENT_APPEAL"),Object(i.a)(O,"APPEAL_DECISION","EVENT_APPEAL_DECISION"),Object(i.a)(O,"ASSET_ADDED","EVENT_ASSET_ADDED"),Object(i.a)(O,"DESIGN_UPDATE","EVENT_DESIGN_UPDATE"),Object(i.a)(O,"END_COLLABORATION","EVENT_END_COLLABORATION"),Object(i.a)(O,"JOB_INVITE_UPDATE","EVENT_JOB_INVITE_UPDATE"),Object(i.a)(O,"JOB_UPDATE","EVENT_JOB_UPDATE"),Object(i.a)(O,"NEW_DRIVER","EVENT_NEW_DRIVER"),Object(i.a)(O,"PERMISSION_DISCONNECT","EVENT_PERMISSION_DISCONNECT"),Object(i.a)(O,"PRIVATE_SET","EVENT_PRIVATE_SET"),Object(i.a)(O,"PUBLIC_SET","EVENT_PUBLIC_SET"),Object(i.a)(O,"UI_UPDATE","EVENT_UI_UPDATE"),Object(i.a)(O,"USER_ADD","EVENT_USER_ADD"),Object(i.a)(O,"USER_REMOVE","EVENT_USER_REMOVE");class p extends a{}class g extends c{}Object(i.a)(g,"INFORM_JOB_UPDATE","SERVER_SYNT_INFORM_JOB_UPDATE"),Object(i.a)(g,"INFORM_JOB_INVITE_UPDATE","SERVER_SYNT_INFORM_JOB_INVITE_UPDATE"),Object(i.a)(g,"DISCONNECT_ILLEGAL_USERS","SERVER_SYNT_DISCONNECT_ILLEGAL_USERS"),Object(i.a)(g,"DISCONNECT_ALL_USERS","SERVER_SYNT_DISCONNECT_ALL_USERS")},666:function(e,t,s){"use strict";s.r(t),s.d(t,"DesignCollabClient",(function(){return h}));var i=s(2),o=s(3),n=s(310),r=s.n(n),a=s(1517),c=s(1140),d=s(55),l=s(104);class h extends c.a{constructor(e){super({apiUrl:e.apiUrl,authData:e.authData,requestTimeoutMs:e.requestTimeoutMs,roomRejoinIntervalMs:e.roomRejoinIntervalMs,socketUrl:e.socketUrl+"collaboration_namespace"}),Object(o.a)(this,"chatClient",void 0),Object(o.a)(this,"chatRoom",void 0),Object(o.a)(this,"config",void 0),Object(o.a)(this,"descriptor",void 0),Object(o.a)(this,"tempDisconnect",void 0),this.config=e}static async create(e,t=!1,s=0){const i=new h(e);return await i.loadCollab(),t||await i.init(s),i}static async createNew(e,t,s,i,o,n,r){const a=new h(e),c=await a.createCollab("DESIGN",t,s,i,o,n,r);return c&&(a.config.collabId=c.collaborationId),await a.loadCollab(),await a.init(),a}static async createNewComposite(e,t,s,i,o){const n=new h(e),r=await n.createCollab("COMPOSITE","",t,s,i,o);return r&&(n.config.collabId=r.collaborationId),await n.loadCollab(),await n.init(),n}async addAsset(e){this.descriptor&&await this.callApi("POST","AddAssetToCollaboration",{collabId:this.descriptor.id,imageId:e})}async addUser(e){if(!this.isJoined())throw new Error("collab not joined");const t=this.descriptor.id;return new Promise((s,i)=>{const o=l.a.create("addUser",t),n=l.c.forRoomRequest(t,o.requestId,()=>{this.offResponseBasic(d.g.ADD_COLLABORATOR,n),this.offError(r),s()}),r=l.c.forError(o.requestId,e=>{this.offResponseBasic(d.g.ADD_COLLABORATOR,n),this.offError(r),i(e)});this.onResponseBasic(d.g.ADD_COLLABORATOR,n),this.onError(r),this.emitAddCollaborator(o,e)})}async addUsersByEmail(e){return this.callApi("POST","AddToCollaborationViaEmail",{collabId:this.descriptor.id,emails:e})}async appeal(e){if(!this.isJoined())throw new Error("collab not joined");const t=this.descriptor.id;return new Promise((s,i)=>{const o=l.a.create("appeal",t),n=l.c.forRoom(t,e=>{e.appealRequest.requestId===o.requestId&&(this.socket.off(d.e.APPEAL_DECISION,n),this.offError(r),s(e))}),r=l.c.forError(o.requestId,e=>{this.socket.off(d.e.APPEAL_DECISION,n),this.offError(r),i(e)});this.socket.on(d.e.APPEAL_DECISION,n),this.onError(r),this.emitAppeal(o,e)})}async changePrivacy(e){if(!this.isJoined())throw new Error("collab not joined");const t=this.descriptor.id;return new Promise((s,i)=>{const o=l.a.create("changePrivacy",t),n=l.c.forRoomRequest(t,o.requestId,()=>{this.offRespChangePrivacy(e,n),this.offError(r),s()}),r=l.c.forError(o.requestId,t=>{this.offRespChangePrivacy(e,n),this.offError(r),i(t)});this.onRespChangePrivacy(e,n),this.onError(r),this.emitChangePrivacy(o,e)})}async joinCollabChat(e){try{let t=this.getChatClient();if(!t){const s=Object(i.a)({},e);s.authData=this.config.authData,s.socketUrl=this.config.socketUrl,void 0===s.requestTimeoutMs&&(s.requestTimeoutMs=this.config.requestTimeoutMs),void 0===s.roomRejoinIntervalMs&&(s.roomRejoinIntervalMs=this.config.roomRejoinIntervalMs),t=this.chatClient=await a.a.create(s)}this.chatRoom=await t.getRoomById(this.getChatId()),await this.chatRoom.join()}catch(t){throw console.log("Failed to create collab chat client.",t),t}}getChatClient(){return this.chatClient}getChatId(){return this.descriptor.chatId}getChatRoom(){return this.chatRoom}getCollabType(){return this.descriptor.collaborationType}getIsLive(){return this.descriptor.isLive}getJobId(){return this.descriptor.jobId}async endCollaboration(){if(!this.isJoined())throw new Error("collab not joined");const e=this.descriptor.id;return new Promise((t,s)=>{const i=l.a.create("endCollab",e),o=l.c.forRoomRequest(e,i.requestId,()=>{this.offResponseBasic(d.g.END_COLLABORATION,o),this.offError(n),t()}),n=l.c.forError(i.requestId,e=>{this.offResponseBasic(d.g.END_COLLABORATION,o),this.offError(n),s(e)});this.onResponseBasic(d.g.END_COLLABORATION,o),this.onError(n),this.emitEndCollaboration(i)})}async endCollaborationAPI(){return this.callApi("POST","EndCollaboration",{collabId:this.descriptor.id})}getAllUsers(){return this.descriptor?this.descriptor.participants.filter(e=>e.participant):[]}getAssetIds(){return this.descriptor?this.descriptor.assetIds:[]}getCollabId(){return this.descriptor.id}getConnectedUsers(){return this.descriptor?this.descriptor.participants.filter(e=>e.participant&&e.connectedCount>0):[]}getDescriptor(){return this.descriptor}getDesignId(){return this.descriptor.currentObjectId}getDriver(){return this.descriptor?this.descriptor.participants.find(e=>e.roles.indexOf("DRIVER")>=0):void 0}getMyself(){return this.myself}getOwner(){return this.descriptor?this.descriptor.participants.find(e=>e.roles.indexOf("OWNER")>=0):void 0}getShortLink(){return this.descriptor?this.descriptor.shortLink:void 0}async giveDriver(e){if(!this.isJoined())throw new Error("collab not joined");const t=this.descriptor.id;return new Promise((s,i)=>{const o=l.a.create("giveDriver",t),n=l.c.forRoomRequest(t,o.requestId,()=>{this.offResponseBasic(d.g.GIVE_DRIVER,n),this.offError(r),s()}),r=l.c.forError(o.requestId,e=>{this.offResponseBasic(d.g.GIVE_DRIVER,n),this.offError(r),i(e)});this.onResponseBasic(d.g.GIVE_DRIVER,n),this.onError(r),this.emitGiveDriver(o,e)})}hasEnded(){return!(!this.descriptor||!this.descriptor.dateEnded)}isJoined(){return this.isConnected()&&!!this.myself&&!this.tempDisconnect}isPublic(){return!!this.descriptor&&this.descriptor.participants.findIndex(e=>!e.participant)>=0}async joinCollab(e,t){this.descriptor||this.config.collabId||this.config.designId||(this.config.collabId=e,this.config.designId=t,await this.loadCollab(),this.descriptor&&await this.joinRoom(this.descriptor))}async joinRoom(e){const t=this.getCollabId();if(e.id===t){try{this.myself=await super.joinRoom(e)}catch(s){throw this.tempDisconnect=!0,s}return this.tempDisconnect=!1,await this.syncRooms([t]),this.myself}return Promise.reject("Wrong room id: "+e.id)}async removeUser(e){if(!this.isJoined())throw new Error("collab not joined");const t=this.descriptor.id;return new Promise((s,i)=>{const o=l.a.create("removeUser",t),n=l.c.forRoomRequest(t,o.requestId,()=>{this.offResponseBasic(d.g.REMOVE_COLLABORATOR,n),this.offError(r),s()}),r=l.c.forError(o.requestId,e=>{this.offResponseBasic(d.g.REMOVE_COLLABORATOR,n),this.offError(r),i(e)});this.onResponseBasic(d.g.REMOVE_COLLABORATOR,n),this.onError(r),this.emitRemoveCollaborator(o,e)})}async removeUserAPI(e){return this.callApi("POST","RemoveMemberAsCollaborator",{collabId:this.descriptor.id,memberId:e})}async setPrivacy(e){return this.callApi("POST","SetPrivacy",{collabId:this.descriptor.id,isPublic:e})}async updateUI(e){if(!this.isJoined())throw new Error("collab not joined");const t=this.descriptor.id;return new Promise((s,i)=>{const o=l.a.create("updateUI",t),n=l.c.forRoomRequest(t,o.requestId,()=>{this.offResponseBasic(d.g.UI_UPDATE,n),this.offError(r),s()}),r=l.c.forError(o.requestId,e=>{this.offResponseBasic(d.g.UI_UPDATE,n),this.offError(r),i(e)});this.onResponseBasic(d.g.UI_UPDATE,n),this.onError(r),this.emitUIUpdate(o,e)})}async yieldDriver(){if(!this.isJoined())throw new Error("collab not joined");const e=this.descriptor.id;return new Promise((t,s)=>{const i=l.a.create("yieldDriver",e),o=l.c.forRoomRequest(e,i.requestId,()=>{this.offResponseBasic(d.g.YIELD_DRIVER,o),this.offError(n),t()}),n=l.c.forError(i.requestId,e=>{this.offResponseBasic(d.g.YIELD_DRIVER,o),this.offError(n),s(e)});this.onResponseBasic(d.g.YIELD_DRIVER,o),this.onError(n),this.emitYieldDriver(i)})}getTempDisconnectedRooms(){return this.tempDisconnect?[this.descriptor]:[]}setTempDisconnectedRooms(e){!this.descriptor||this.descriptor.dateEnded&&this.descriptor.dateEnded<new Date||e.includes(this.descriptor.id)||(this.tempDisconnect=!0)}async createCollab(e,t,s,i,o,n,r){return"CHAT"===e?Promise.reject("Collaboration type CHAT is not supported."):this.callApi("POST","CreateCollaboration",{attributes:o,collaborationType:e,compositeCollabId:r,emails:i,isPublic:n,objectId:t,origin:s,version:2})}async getCollabIdByDesignId(e){return(await this.callApi("GET","GetCollaborationByObjectId",{objectId:e,objectType:"DESIGN"})).collaborationId}async getDescriptorById(e){const t=await this.callApi("GET","GetCollaboration",{collabId:e});return t.dateCreated=new Date(t.dateCreated),t.dateEnded&&(t.dateEnded=new Date(t.dateEnded)),t.id=t.collaborationId,delete t.collaborationId,t.participants=t.roleAssignments,delete t.roleAssignments,t}handleDisconnect(){return super.handleDisconnect(),this.myself&&(this.tempDisconnect=!0),!0}async init(e=0){var t=this;if(this.config.socketUrl&&!this.hasEnded()){await super.init(e),this.onEventInternal(d.e.ASSET_ADDED,(async function(e,s){if(t.descriptor&&s&&s.length>0)return t.descriptor.assetIds=r()(t.getAssetIds(),s),[e,s]})),this.onEventInternal(d.e.PRIVATE_SET,(async function(e){if(t.syncUser(null,"remove"))return[e]})),this.onEventInternal(d.e.PUBLIC_SET,(async function(e){if(t.syncUser(null,"add"))return[e]})),this.onEventInternal(d.e.DESIGN_UPDATE,(async function(e,s){const i=JSON.parse(s),o=t.descriptor;if(o&&o.objectIds&&o.currentObjectId&&i&&i.design&&i.design.id){const e=i.design.id;t.descriptor.currentObjectId=e,-1===t.descriptor.objectIds.indexOf(e)&&t.descriptor.objectIds.push(e)}return[e,i]}));const s=async function(e){return t.myself=void 0,[e]};this.onEventInternal(d.e.END_COLLABORATION,(async function(e){return t.descriptor&&(t.descriptor.dateEnded=new Date),s(e)})),this.onEventInternal(d.e.PERMISSION_DISCONNECT,s),this.onEventInternal(d.e.LOAD_USERS_IN_ROOM,(async function(e,s){return s.forEach(e=>t.syncUser({memberId:e},"join")),t.fireSyntheticEvent(d.h.USERS_UPDATED,e),[e,s]})),this.onEventInternal(d.e.NEW_DRIVER,(async function(e,s){if(t.syncUser({memberId:s},"driver"))return[e,s]})),this.onEventInternal(d.e.USER_ADD,(async function(e,s){if(t.syncUser(s,"add"))return[e,s]})),this.onEventInternal(d.e.USER_JOIN,(async function(e,s){if(t.syncUser({memberId:s},"join"))return[e,s]})),this.onEventInternal(d.e.USER_LEAVE,(async function(e,s){if(t.syncUser({memberId:s},"leave"))return[e,s]})),this.onEventInternal(d.e.USER_REMOVE,(async function(e,s){if(t.syncUser({memberId:s},"remove"))return[e,s]})),this.descriptor&&await this.callWithRetry(()=>this.joinRoom(this.descriptor),e,"initial join collab room"),this.setAutoRejoin()}}async loadCollab(){this.descriptor||(!this.config.collabId&&this.config.designId&&(this.config.collabId=await this.getCollabIdByDesignId(this.config.designId)),this.config.collabId&&(this.descriptor=await this.getDescriptorById(this.config.collabId)))}async refreshDescriptor(){this.config.collabId&&(this.descriptor=await this.getDescriptorById(this.config.collabId))}async syncRooms(e){const t=this.getCollabId();e.includes(t)&&(console.log("syncing collab "+t),this.descriptor=await this.getDescriptorById(t),this.emitLoadUsersInRoom(l.a.create("loadUsersInRoom",this.descriptor.id)))}syncUser(e,t){const s=this.descriptor,i=s&&s.participants;if(i){const s=i.findIndex(t=>!t.participant&&!e||t.participant&&e&&t.participant.memberId===e.memberId);switch(t){case"add":if(s<0)return i.push({connectedCount:0,participant:e,roles:["COLLABORATOR"]}),!0;break;case"driver":if(s>=0&&!l.b.hasRole(i[s],"DRIVER"))return l.b.removeRole(this.getDriver(),"DRIVER"),l.b.addRole(i[s],"DRIVER"),!0;break;case"join":if(s>=0)return i[s].connectedCount||(i[s].connectedCount=0),i[s].connectedCount++,!0;break;case"leave":if(s>=0&&i[s].connectedCount>0)return i[s].connectedCount--,!0;break;case"remove":if(s>=0)return i.splice(s,1),!0}}return!1}emitAddCollaborator(e,t){this.socket.emit(d.f.ADD_COLLABORATOR,e,t)}emitEndCollaboration(e){this.socket.emit(d.f.END_COLLABORATION,e)}emitChangePrivacy(e,t){t?this.socket.emit(d.f.SET_PUBLIC_COLLABORATION,e):this.socket.emit(d.f.SET_PRIVATE_COLLABORATION,e)}emitGiveDriver(e,t){this.socket.emit(d.f.GIVE_DRIVER,e,t)}emitRemoveCollaborator(e,t){this.socket.emit(d.f.REMOVE_COLLABORATOR,e,t)}emitUIUpdate(e,t){this.socket.emit(d.f.UI_UPDATE,e,t)}emitYieldDriver(e){this.socket.emit(d.f.YIELD_DRIVER,e)}onRespChangePrivacy(e,t){e?this.onResponseBasic(d.g.SET_PUBLIC_COLLABORATION,t):this.onResponseBasic(d.g.SET_PRIVATE_COLLABORATION,t)}offRespChangePrivacy(e,t){e?this.offResponseBasic(d.g.SET_PUBLIC_COLLABORATION,t):this.offResponseBasic(d.g.SET_PRIVATE_COLLABORATION,t)}emitAppeal(e,t){this.socket.emit(d.e.APPEAL,e,t)}emitAppealDecision(e,t){this.socket.emit(d.e.APPEAL_DECISION,e,t)}onAppeal(e){this.socket.on(d.e.APPEAL,(t,s)=>{const i=this.descriptor.id;if(t.roomId===i){const o=e(s,t);if(o){const e=this.getOwner();if(e&&e.participant.memberId===this.getMyself()){const e=l.a.create("appealDecision",i);o.appealRequest=t,this.emitAppealDecision(e,o)}}}})}onAssetAdded(e){this.addUserHandler(d.e.ASSET_ADDED,l.c.forRoom(this.descriptor.id,e))}onChangePrivacy(e){this.addUserHandler(d.e.PRIVATE_SET,l.c.forRoom(this.descriptor.id,(async function(){await e(!1)}))),this.addUserHandler(d.e.PUBLIC_SET,l.c.forRoom(this.descriptor.id,(async function(){await e(!0)})))}onDesignUpdate(e){this.addUserHandler(d.e.DESIGN_UPDATE,l.c.forRoom(this.descriptor.id,e))}onEndCollaboration(e){this.addUserHandler(d.e.END_COLLABORATION,l.c.forRoom(this.descriptor.id,e))}onJobUpdate(e){this.socket.on(d.e.JOB_UPDATE,e)}onJobInviteUpdate(e){this.socket.on(d.e.JOB_INVITE_UPDATE,e)}onNewDriver(e){this.addUserHandler(d.e.NEW_DRIVER,l.c.forRoom(this.descriptor.id,e))}onPermissionDisconnect(e){this.addUserHandler(d.e.PERMISSION_DISCONNECT,l.c.forRoom(this.descriptor.id,e))}onUIChange(e){this.socket.on(d.e.UI_UPDATE,l.c.forRoom(this.descriptor.id,e))}onUserAdd(e){this.addUserHandler(d.e.USER_ADD,e)}onUserRemove(e){this.addUserHandler(d.e.USER_REMOVE,e)}}}},[[2176,270,1,0,4,6,42,58,367,2,3,7,19,25,28,27,47,39,49,54,56,72,67,76]]]);